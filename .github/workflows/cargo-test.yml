name: Cargo Test

on: [push, pull_request]

env:
  CARGO_INCREMENTAL: 0
  RUST_LOG: "debug"

jobs:
  check-license:
    name: Check license
    runs-on: ubuntu-latest
    if: >-
      ${{ !contains(github.event.head_commit.message, 'chore: ') }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Install cargo-deny
        uses: baptiste0928/cargo-install@v1.1.0
        with:
          crate: cargo-deny
          version: "0.11.3"

      - name: Check licenses
        run: |
          cargo deny check

  test:
    name: Cargo test - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: >-
      ${{ !contains(github.event.head_commit.message, 'chore: ') }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest

    steps:
      - name: Handle line endings
        shell: bash
        if: runner.os == 'Windows'
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf

      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.3.0

      # Source map format
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "pnpm"

      # We explicitly do this to cache properly.
      - name: Install Rust
        uses: actions-rs/toolchain@v1

      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: "cargo-debug-test"
          cache-on-failure: true

      - name: Install node dependencies
        shell: bash
        run: |
          yarn

      - name: Configure path (windows)
        shell: bash
        if: runner.os == 'Windows'
        run: |
          echo $(pnpm global bin) >> $GITHUB_PATH

      - name: Run cargo test
        run: |
          cargo test --color always --all
